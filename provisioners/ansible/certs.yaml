---
- hosts: all
  become: yes
  any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
  vars:
    cert_generated: "{{ cert_generated }}"
    pkcs1_generated: "{{ pkcs1_generated }}"
  tasks:
    - name: Check pip exists
      command: which pip
      register: pip_exist
      ignore_errors: True

    - name: Download get-pip.py
      get_url:
        url: https://bootstrap.pypa.io/2.7/get-pip.py
        dest: /tmp/get-pip.py
        mode: 0755
      when: pip_exist is failed

    - stat: path=/tmp/get-pip.py
      register: stat_pip_result
      when: pip_exist is failed

    - name: Install pip
      command: python /tmp/get-pip.py
      register: pip_install
      when:
        - pip_exist is failed
        - stat_pip_result.stat.exists == True

    - debug:
        msg: "pip has been installed"
      when: (pip_install is succeeded) or (pip_exist is succeeded)

    - name: Install python-openssl
      pip:
        name: pyOpenSSL

    - name: Generate the CA private key
      openssl_privatekey:
        path: "{{ certs_path }}/{{ common_name | replace('.', '-') }}-ca-key.pem"

    - stat: path={{ certs_path }}/{{ common_name | replace('.', '-') }}-ca.crt
      register: ca_crt_file

    - name: Generate a Self Signed CA certificate
      shell: openssl req -x509 -new -nodes -key {{ common_name | replace('.', '-') }}-ca-key.pem -days {{ ca_days }} -out {{ common_name | replace('.', '-') }}-ca.crt -subj "/CN={{ common_name | replace('.', '-') }}-ca"
      args:
        chdir: "{{ certs_path }}"
      when: ca_crt_file.stat.exists == False

    - name: Generate the {{ common_name }} private key
      openssl_privatekey:
        path: "{{ certs_path }}/{{ common_name | replace('.', '-') }}-key.pem"
      when: cert_generated

    - name: Generate the {{ common_name }} certificate signing request (CSR)
      openssl_csr:
        path: "{{ certs_path }}/{{ common_name | replace('.', '-') }}.csr"
        privatekey_path: "{{ certs_path }}/{{ common_name | replace('.', '-') }}-key.pem"
        common_name: "{{ common_name }}"
        subject_alt_name: "{{ item.value | map('regex_replace', '^', 'DNS:') | list }}"
      with_dict:
        alt_names: "{{ alt_names }}"
      when: cert_generated

    - name: Generate the {{ common_name }} certificate signed by the self-signed CA
      openssl_certificate:
        path: "{{ certs_path }}/{{ common_name | replace('.', '-') }}.crt"
        csr_path: "{{ certs_path }}/{{ common_name | replace('.', '-') }}.csr"
        ownca_path: "{{ certs_path }}/{{ common_name | replace('.', '-') }}-ca.crt"
        ownca_privatekey_path: "{{ certs_path }}/{{ common_name | replace('.', '-') }}-ca-key.pem"
        ownca_not_after: "+{{ cert_days }}d"
        provider: ownca
      when: cert_generated

    - name: Generate the PKCS#1 file for {{ common_name }}
      shell: openssl rsa -in {{ common_name | replace('.', '-') }}-ca-key.pem -out {{ common_name | replace('.', '-') }}-ca.key
      args:
        chdir: "{{ certs_path }}"
      when: pkcs1_generated
